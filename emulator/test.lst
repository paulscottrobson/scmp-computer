 AS V1.42 Beta [Bld 115] - source file test.asm - page 1 - 16/11/2017 11:54:19


       1/       0 :                     ; ***********************************************************************************************
       2/       0 :                     ;
       3/       0 :                     ;
       4/       0 :                     ; ***********************************************************************************************
       5/       0 :                     
       6/       0 :                     	cpu 	sc/mp
       7/       0 :                     
       8/       0 :                     bootloader:
       9/       0 : 08                  	nop 
      10/       1 : C4 A5               	ldi 	0xA5 									; value in P3.H
      11/       3 : 37                  	xpah 	p3 	
      12/       4 : C4 82               	ldi	 	0x82									; start with $82 (C)
      13/       6 : 01                  	xae
      14/       7 : C4 77               	ldi 	0x80-9									; loop counter in P3.L
      15/       9 : 33                  	xpal 	p3
      16/       A :                     
      17/       A :                     __nextDigit:	
      18/       A :                     waitD0:
      19/       A : 01                  	xae
      20/       B : 19                  	sio
      21/       C : 01                  	xae
      22/       D : 94 FB               	jp 		waitD0
      23/       F : 8F 00               	dly 	00
      24/      11 :                     
      25/      11 : 33                  	xpal 	p3 										; check if finished *after* reset to D0
      26/      12 : 94 0C               	jp 		__doNextDigitOut
      27/      14 :                     
      28/      14 : 33                  	xpal 	p3 										; fix P3 back so we can loop around.
      29/      15 : 06                  	csa 											; check if it has changed
      30/      16 : D4 30               	ani 	0x30 									; only interested in SA + SB
      31/      18 :                     __lastKey:	
      32/      18 : E4 00               	xri		0x00
      33/      1A : 98 EE               	jz 		waitD0  								; check if it's changed.
      34/      1C : E0 FC               	xor 	__lastKey+1								; update last key vaue
      35/      1E : C8 FA               	st 		__lastKey+1
      36/      20 :                     
      37/      20 :                     
      38/      20 :                     __doNextDigitOut:
      39/      20 : 33                  	xpal 	p3
      40/      21 :                     
      41/      21 : 40                  	lde												; $82 = C $81 = 1 $02 = 0
      42/      22 : 94 03               	jp 		__writeSASB
      43/      24 : 8F 18               	dly 	8 * 3 									; skip straight to D8.
      44/      26 : 40                  	lde 											; reload current value
      45/      27 :                     __writeSASB:
      46/      27 : 07                  	cas 											; output the lower bits to F0/F1 and CY/L ?
      47/      28 : 8F 03               	dly 	3 										; wait end of pulse
      48/      2A : C4 00               	ldi 	0 										; clear F0/F1
      49/      2C : 07                  	cas 
      50/      2D :                     
      51/      2D : 37                  	xpah 	p3 										; get number being displayed, 
      52/      2E : 01                  	xae 											; shift left into carry.
      53/      2F : 40                  	lde
      54/      30 : 70                  	ade
      55/      31 : 37                  	xpah 	p3 										; save it back, A will be cleared 
      56/      32 :                     
      57/      32 : 06                  	csa 											; get $81 or $02 in AC.
      58/      33 : D4 80               	ani 	0x80
      59/      35 : F4 01               	adi		0x01
      60/      37 : E4 03               	xri 	0x03
 AS V1.42 Beta [Bld 115] - source file test.asm - page 2 - 16/11/2017 11:54:19


      61/      39 : 01                  	xae 											; put back in E
      62/      3A :                     
      63/      3A : C7 01               	ld 		@1(p3) 									; inc loop counter
      64/      3C : 90 CC               	jmp 	__nextDigit 							; do the next digit.
      65/      3E :                     
      66/      3E :                     __endofrefresh:
      67/      3E :                     	
      68/      3E :                     
      69/      3E :                     
      70/      3E :                     
 AS V1.42 Beta [Bld 115] - source file test.asm - page 3 - 16/11/2017 11:54:19


  symbol table (* = unused):
  ------------------------

*ARCHITECTURE :                                        x86_64-unknown-linux - |
*BIGENDIAN :                      0 - | *BOOTLOADER :                     0 C |
*BRANCHEXT :                      0 - | *CASESENSITIVE :                  0 - |
*CONSTPI :        3.141592653589793 - | *DATE :                  16/11/2017 - |
*FALSE :                          0 - | *FULLPMMU :                       1 - |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
*INEXTMODE :                      0 - | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      0 - | *LISTON :                         1 - |
*MACEXP :                         1 - | *MOMCPU :                         C - |
*MOMCPUNAME :                 SC/MP - | *NESTMAX :                      100 - |
*PACKING :                        0 - | *PADDING :                        1 - |
*RELAXED :                        0 - | *TIME :                    11:54:19 - |
*TRUE :                           1 - | *VERSION :                     142F - |
 WAITD0 :                         A C |  __DONEXTDIGITOUT :              20 C |
*__ENDOFREFRESH :                3E C |  __LASTKEY :                     18 C |
 __NEXTDIGIT :                    A C |  __WRITESASB :                   27 C |

     35 symbols
     30 unused symbols

 AS V1.42 Beta [Bld 115] - source file test.asm - page 4 - 16/11/2017 11:54:19


  codepages:
  ----------

STANDARD (0 changed characters)


0.00 seconds assembly time

     70 lines source file
      2 passes
      0 errors
      0 warnings
