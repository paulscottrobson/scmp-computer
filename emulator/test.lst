 AS V1.42 Beta [Bld 115] - source file test.asm - page 1 - 16/11/2017 19:02:30


       1/       0 :                     ; ***********************************************************************************************
       2/       0 :                     ;
       3/       0 :                     ;
       4/       0 :                     ; ***********************************************************************************************
       5/       0 :                     
       6/       0 :                     	cpu 	sc/mp
       7/       0 :                     
       8/       0 :                     bootloader:
       9/       0 : 08                  	nop 
      10/       1 :                     
      11/       1 :                     __currentAddressX1:	
      12/       1 : 31                  	xpal 	p1 									; get P1.L
      13/       2 : 01                  	xae 										; put into E
      14/       3 : 40                  	lde 										; copy back into P1.L
      15/       4 : 31                  	xpal 	p1
      16/       5 :                     ;
      17/       5 :                     ;	Refresh the display with the value in E
      18/       5 :                     ;
      19/       5 :                     refreshDisplayWithE:	
      20/       5 : C4 82               	ldi 	0x82 								; put first character to send ($82, 'C') in P3.H
      21/       7 : 37                  	xpah 	p3
      22/       8 : C4 09               	ldi 	9 									; chars to send in P3.L
      23/       A :                     refreshDisplayOnceIfACZero:	
      24/       A : DC 01               	ori 	1
      25/       C :                     writeKeystroke:									; write the next keystroke
      26/       C : 33                  	xpal 	p3 									; put back in P3.L counter.
      27/       D : 01                  	xae 										; wait for D0
      28/       E : 19                  	sio
      29/       F : 01                  	xae
      30/      10 : 94 FA               	jp 		writeKeyStroke
      31/      12 : 8F 00               	dly 	00									; short delay in.
      32/      14 :                     
      33/      14 : 06                  	csa 										; get status of SA/SB
      34/      15 : D4 30               	ani 	0x30
      35/      17 : 32                  	xpal 	p2 									; put in P2.L
      36/      18 :                     
      37/      18 : 37                  	xpah 	p3 									; recover character to transmit
      38/      19 : 94 04               	jp 		notD8 								; if +ve, don't skip to D8.
      39/      1B : 37                  	xpah 	p3 									; save back
      40/      1C : 8F 18               	dly 	03*8 								; skip to D8
      41/      1E : 37                  	xpah 	p3 									; restore.
      42/      1F :                     notD8:
      43/      1F : 07                  	cas 										; write to F0/F1.
      44/      20 :                     
      45/      20 : 8F 03               	dly 	03 									; wait till next scan position.
      46/      22 : C4 00               	ldi 	0 									; clear F0, F1 and CY/L.	
      47/      24 : 07                  	cas 
      48/      25 :                     
      49/      25 : 40                  	lde 										; shift E left into CY/L
      50/      26 : 70                  	ade
      51/      27 : 01                  	xae
      52/      28 :                     
      53/      28 : 06                  	csa 										; get SR
      54/      29 : D4 80               	ani 	0x80 								; now $00 (NC) $80 (C)
      55/      2B : F4 01               	adi 	0x01 								; now $01 (NC) $82 (C)
      56/      2D : E4 03               	xri 	0x03 								; now $02 (NC) $81 (C)
      57/      2F : 37                  	xpah 	p3 									; put in character to write.
      58/      30 :                     
      59/      30 : C7 FF               	ld 		@-1(p3) 							; decrement counter
      60/      32 : 33                  	xpal 	p3 									; check it.
 AS V1.42 Beta [Bld 115] - source file test.asm - page 2 - 16/11/2017 19:02:30


      61/      33 : 9C D7               	jnz 	writeKeystroke 						; go do the next keystroke.
      62/      35 : 37                  	xpah 	p3 									; zero 'to write' in P3.H now.
      63/      36 :                     
      64/      36 : 32                  	xpal 	p2 									; get key press value from P2.L
      65/      37 : 01                  	xae 										; put in E.
      66/      38 :                     __lastKeyStatusX1:
      67/      38 : C4 00               	ldi 	00									; get last key pressed
      68/      3A : 60                  	xre 										; has it changed ?
      69/      3B : 98 CD               	jz  	refreshDisplayOnceIfAcZero			; if not, keep scanning the keyboard.
      70/      3D :                     
      71/      3D : 40                  	lde 										; get the value from the keyboard.
      72/      3E : C8 FA               	st 		__lastKeyStatusX1+1 				; update the last key status.
      73/      40 : 98 BF               	jz 		__currentAddressX1 					; if released display current address.
      74/      42 :                     
      75/      42 : D4 20               	ani 	0x20 								; was SB pressed (e.g. zero)
      76/      44 : 98 04               	jz 		advance 							; if not, it was nine which is advance only
      77/      46 :                     
      78/      46 :                     												; pressing 0 copies the toggles in.
      79/      46 : C0 B8               	ld 		0xFFF 								; read keyboard toggles
      80/      48 : C9 00               	st 		(p1) 								; and save at current address
      81/      4A :                     
      82/      4A :                     advance:
      83/      4A : C5 01               	ld 		@1(p1) 								; read the byte there and bump P1.
      84/      4C : 01                  	xae 										; into E
      85/      4D : 90 B6               	jmp 	refreshDisplayWithE 				; display that
      86/      4F :                     
      87/      4F :                     
      88/      4F :                     
      89/      4F :                     
      90/      4F :                     
      91/      4F :                     
 AS V1.42 Beta [Bld 115] - source file test.asm - page 3 - 16/11/2017 19:02:30


  symbol table (* = unused):
  ------------------------

 ADVANCE :                       4A C |
*ARCHITECTURE :                                        x86_64-unknown-linux - |
*BIGENDIAN :                      0 - | *BOOTLOADER :                     0 C |
*BRANCHEXT :                      0 - | *CASESENSITIVE :                  0 - |
*CONSTPI :        3.141592653589793 - | *DATE :                  16/11/2017 - |
*FALSE :                          0 - | *FULLPMMU :                       1 - |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
*INEXTMODE :                      0 - | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      0 - | *LISTON :                         1 - |
*MACEXP :                         1 - | *MOMCPU :                         C - |
*MOMCPUNAME :                 SC/MP - | *NESTMAX :                      100 - |
 NOTD8 :                         1F C | *PACKING :                        0 - |
*PADDING :                        1 - |  REFRESHDISPLAYONCEIFACZERO :     A C |
 REFRESHDISPLAYWITHE :            5 C | *RELAXED :                        0 - |
*TIME :                    19:02:30 - | *TRUE :                           1 - |
*VERSION :                     142F - |  WRITEKEYSTROKE :                 C C |
 __CURRENTADDRESSX1 :             1 C |  __LASTKEYSTATUSX1 :             38 C |

     36 symbols
     29 unused symbols

 AS V1.42 Beta [Bld 115] - source file test.asm - page 4 - 16/11/2017 19:02:30


  codepages:
  ----------

STANDARD (0 changed characters)


0.00 seconds assembly time

     91 lines source file
      2 passes
      0 errors
      0 warnings
